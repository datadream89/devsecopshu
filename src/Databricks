import org.ini4j.{Ini, IniPreferences}

import java.io.File
import java.util.prefs.Preferences
import scala.collection.JavaConverters._
import scala.collection.mutable

class IniFileParser {
  def parseIniFile(file: File): Map[String, Map[String, String]] = {
    val lines = scala.io.Source.fromFile(file).getLines().toList
    val sections = lines.filter(_.startsWith("["))
    val sectionValues = mutable.LinkedHashMap.empty[String, Map[String, String]]

    sections.foreach { section =>
      val sectionName = section.substring(1, section.length - 1)
      val sectionLines = lines.dropWhile(_ != section).drop(1).takeWhile(!_.startsWith("["))
      val keyValues = sectionLines.map { line =>
        val keyValue = line.split("=", 2)
        keyValue(0).trim -> keyValue(1).trim
      }
      sectionValues.put(sectionName, keyValues.toMap)
    }

    sectionValues.toMap
  }

  def retrieveInfoFromIniFiles(folderPath: String): Map[String, Map[String, Map[String, String]]] = {
    val folder = new File(folderPath)
    val iniFiles = folder.listFiles(_.getName.endsWith(".ini"))

    val infoMap = scala.collection.mutable.Map[String, Map[String, Map[String, String]]]()

    iniFiles.foreach { file =>
      val fileKeyValues = parseIniFile(file)
      val fileName = file.getName.stripSuffix(".ini")
      infoMap(fileName) = fileKeyValues
    }

    infoMap.toMap
  }
}
