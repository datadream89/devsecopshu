import com.github.daviddenton.inifile.IniFile

import java.io.File
import scala.collection.JavaConverters._
import scala.collection.immutable.ListMap

class IniFileParser {
  def parseIniFile(file: File): Map[String, Map[String, String]] = {
    val iniFile = IniFile.load(file)
    val sectionValues = iniFile.sections().asScala.map { sectionName =>
      val section = iniFile.section(sectionName)
      val keyValues = section.properties().asScala.map { property =>
        property.key -> property.value
      }
      sectionName -> ListMap(keyValues: _*)
    }
    ListMap(sectionValues.toSeq: _*)
  }

  def retrieveInfoFromIniFiles(folderPath: String): Map[String, Map[String, Map[String, String]]] = {
    val folder = new File(folderPath)
    val iniFiles = folder.listFiles(_.getName.endsWith(".ini"))

    val infoMap = scala.collection.mutable.Map[String, Map[String, Map[String, String]]]()

    iniFiles.foreach { file =>
      val fileKeyValues = parseIniFile(file)
      val fileName = file.getName.stripSuffix(".ini")
      infoMap(fileName) = fileKeyValues
    }

    infoMap.toMap
  }
}
