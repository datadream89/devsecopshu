import org.ini4j.{Ini, IniPreferences}

import java.io.{File, FileReader}
import java.util.prefs.Preferences
import scala.collection.JavaConverters._
import scala.collection.mutable

class IniFileParser {
  def parseIniFile(file: File): Map[String, Map[String, String]] = {
    val ini = new Ini(new FileReader(file))
    val preferences = new IniPreferences(ini)

    val sectionValues = mutable.LinkedHashMap.empty[String, Map[String, String]]

    val keysIterator = ini.keySet().iterator()
    while (keysIterator.hasNext) {
      val sectionName = keysIterator.next()
      val section = preferences.node(sectionName)
      val keyValues = mutable.LinkedHashMap.empty[String, String]

      val sectionKeysIterator = section.keys().iterator()
      while (sectionKeysIterator.hasNext) {
        val key = sectionKeysIterator.next()
        keyValues.put(key, section.get(key, ""))
      }

      sectionValues.put(sectionName, keyValues.toMap)
    }

    sectionValues.toMap
  }

  def retrieveInfoFromIniFiles(folderPath: String): Map[String, Map[String, Map[String, String]]] = {
    val folder = new File(folderPath)
    val iniFiles = folder.listFiles(_.getName.endsWith(".ini"))

    val infoMap = scala.collection.mutable.Map[String, Map[String, Map[String, String]]]()

    iniFiles.foreach { file =>
      val fileKeyValues = parseIniFile(file)
      val fileName = file.getName.stripSuffix(".ini")
      infoMap(fileName) = fileKeyValues
    }

    infoMap.toMap
  }
}
