import scala.io.Source
import scala.collection.mutable
import scala.collection.immutable.ListMap

class IniFileParser {
  def parseIniFile(file: java.io.File): Map[String, Map[String, String]] = {
    val lines = Source.fromFile(file).getLines().toList
    val sections = lines.filter(_.startsWith("["))
    val sectionValues = sections.zipWithIndex.map { case (section, index) =>
      val sectionName = section.substring(1, section.length - 1)
      val startLine = lines.indexOf(section)
      val endLine = if (index < sections.length - 1) lines.indexOf(sections(index + 1)) else lines.length
      val sectionLines = lines.slice(startLine + 1, endLine).filter(_.trim.nonEmpty)
      val keyValues = sectionLines.map { line =>
        val keyValue = line.split("=", 2)
        if (keyValue.length == 2) {
          keyValue(0).trim -> keyValue(1).trim
        } else {
          println(s"WARNING: Invalid key-value format in section '$sectionName': $line")
          "" -> "" // Return empty key-value pair
        }
      }
      println(s"DEBUG: Section '$sectionName', Key-Value pairs: ${keyValues.mkString(", ")}")
      sectionName -> mutable.LinkedHashMap(keyValues: _*)
    }
    ListMap(sectionValues: _*).toMap
  }

  // ... (rest of the IniFileParser class)
}
