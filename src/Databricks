import java.io.{BufferedReader, DataOutputStream, InputStreamReader}
import java.net.HttpURLConnection
import java.net.URL

case class PostRequestExample() extends HttpOperations {
  def sendPostRequest(url: String, data: String, headers: List[(String, String)]): String = {
    val connection = new URL(url).openConnection().asInstanceOf[HttpURLConnection]
    connection.setRequestMethod("POST")
    
    // Set headers
    headers.foreach { case (key, value) =>
      connection.setRequestProperty(key, value)
    }

    connection.setDoOutput(true)

    val outputStream = new DataOutputStream(connection.getOutputStream)
    outputStream.writeBytes(data)
    outputStream.flush()
    outputStream.close()

    val responseCode = connection.getResponseCode
    if (responseCode == HttpURLConnection.HTTP_OK) {
      val inputStream = new BufferedReader(new InputStreamReader(connection.getInputStream))
      val response = new StringBuilder
      var inputLine: String = null
      while ({ inputLine = inputStream.readLine(); inputLine != null }) {
        response.append(inputLine)
      }
      inputStream.close()
      response.toString()
    } else {
      throw new RuntimeException(s"POST request failed with response code: $responseCode")
    }
  }
}

trait HttpOperations {
  def sendPostRequest(url: String, data: String, headers: List[(String, String)]): String
}

object Main {
  def main(args: Array[String]): Unit = {
    val example = PostRequestExample()

    val url = "https://example.com/api/endpoint"
    val data = """{"name": "John Doe", "age": 30}"""
    val headers = List(("Authorization", "Bearer token"), ("X-Custom-Header", "Custom Value"))

    val response = example.sendPostRequest(url, data, headers)
    println(response)
  }
}
